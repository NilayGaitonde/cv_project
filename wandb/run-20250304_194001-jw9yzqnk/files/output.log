/Users/nilaygaitonde/Documents/Projects/cv_project/siamese.py:271: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  trained_model.load_state_dict(torch.load("best_model.pth"))
Using device: mps
Training epoch 1/10
Epoch 1/10, Iteration 1/980, Loss: 0.2711
Batch accuracy: 12/20 = 0.6000
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 12/20 = 0.6000
Batch accuracy: 13/20 = 0.6500
Batch accuracy: 17/20 = 0.8500
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 8/20 = 0.4000
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 15/20 = 0.7500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 13/20 = 0.6500
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 12/20 = 0.6000
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 12/20 = 0.6000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 12/20 = 0.6000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 7/20 = 0.3500
Batch accuracy: 15/20 = 0.7500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 8/20 = 0.4000
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 8/20 = 0.4000
Batch accuracy: 13/20 = 0.6500
Batch accuracy: 12/20 = 0.6000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 13/20 = 0.6500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 8/20 = 0.4000
Batch accuracy: 8/20 = 0.4000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 12/20 = 0.6000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 8/20 = 0.4000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 10/20 = 0.5000
Batch accuracy: 13/20 = 0.6500
Batch accuracy: 9/20 = 0.4500
Traceback (most recent call last):
  File "/Users/nilaygaitonde/Documents/Projects/cv_project/siamese.py", line 272, in <module>
    trained_model, training_loss, validation_loss = training(trained_model, train_dataloader, val_dataloader, epochs=10, lr=0.001)
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nilaygaitonde/Documents/Projects/cv_project/siamese.py", line 152, in training
    accuracy = calculate_accuracy(model,val_loader)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nilaygaitonde/Documents/Projects/cv_project/siamese.py", line 195, in calculate_accuracy
    for img1, img2, label in val_loader:
  File "/Users/nilaygaitonde/anaconda3/envs/deeplearning/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 701, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/Users/nilaygaitonde/anaconda3/envs/deeplearning/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 757, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nilaygaitonde/anaconda3/envs/deeplearning/lib/python3.12/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/Users/nilaygaitonde/Documents/Projects/cv_project/siamese.py", line 66, in __getitem__
    img1 = torch.FloatTensor(img1).permute(2,0,1)
           ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Batch accuracy: 11/20 = 0.5500
Batch accuracy: 9/20 = 0.4500
Batch accuracy: 14/20 = 0.7000
Batch accuracy: 11/20 = 0.5500